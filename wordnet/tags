!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Digraph	digraph.py	/^class Digraph:$/;"	c
HPATH	utils.py	/^HPATH="..\/test-data\/wordnet\/hyponyms1000-subgraph.txt"$/;"	v
HPATH	wordnet.py	/^HPATH="\/home\/liren\/stash\/ngnet\/data\/wordnet\/hyponyms.txt"$/;"	v
HPATH1	wordnet.py	/^HPATH1="\/home\/liren\/stash\/ngnet\/test_data\/wordnet\/hyponyms1000-subgraph.txt"$/;"	v
HPATH2	wordnet.py	/^HPATH2="\/home\/liren\/stash\/ngnet\/test_data\/wordnet\/hyponyms14.txt"$/;"	v
NGram	ngram.py	/^class NGram:$/;"	c
SPATH	wordnet.py	/^SPATH="\/home\/liren\/stash\/ngnet\/data\/wordnet\/synsets.txt"$/;"	v
SPATH1	wordnet.py	/^SPATH1="\/home\/liren\/stash\/ngnet\/test_data\/wordnet\/synsets1000-subgraph.txt"$/;"	v
SPATH2	wordnet.py	/^SPATH2="\/home\/liren\/stash\/ngnet\/test_data\/wordnet\/synsets14.txt"$/;"	v
S_TESTPATH1	utils.py	/^S_TESTPATH1="..\/test_data\/wordnet\/synsets14.txt"$/;"	v
S_TESTPATH2	utils.py	/^S_TESTPATH2="..\/test_data\/wordnet\/synsets1000-subgraph.txt"$/;"	v
WordNet	wordnet.py	/^class WordNet:$/;"	c
__init__	digraph.py	/^    def __init__(self, num):$/;"	m	class:Digraph
__init__	ngram.py	/^    def __init__(self, words_file, counts_file):$/;"	m	class:NGram
__init__	wordnet.py	/^    def __init__(self, synsets_path, hyponyms_path):$/;"	m	class:WordNet
add_edge	digraph.py	/^    def add_edge(self, v1, v2):$/;"	m	class:Digraph
adj	digraph.py	/^    def adj(self, v):$/;"	m	class:Digraph
alltime_history	ngram.py	/^    def alltime_history(self):$/;"	m	class:NGram
clean_synsets	utils.py	/^def clean_synsets(synsets_path):$/;"	f
contains	wordnet.py	/^    def contains(self, word):$/;"	m	class:WordNet
count_during	ngram.py	/^    def count_during(self, word, start, end):$/;"	m	class:NGram
count_in	ngram.py	/^    def count_in(self, word, year):$/;"	m	class:NGram
descendants	digraph.py	/^def descendants(G, synsets):$/;"	f
dfs	digraph.py	/^def dfs(G, v):$/;"	f
diDFS	digraph.py	/^def diDFS(G, vertices):$/;"	f
hist_sum	ngram.py	/^    def hist_sum(self, words, start, end):$/;"	m	class:NGram
hypnoyms	wordnet.py	/^    def hypnoyms(self, word):$/;"	m	class:WordNet
marked	digraph.py	/^marked = []$/;"	v
nouns	wordnet.py	/^    def nouns(self):$/;"	m	class:WordNet
weight_history	ngram.py	/^    def weight_history(self, word, start, end):$/;"	m	class:NGram
wl_df	ngram.py	/^    def wl_df(self):$/;"	m	class:NGram
word_history	ngram.py	/^    def word_history(self, word, start, end):$/;"	m	class:NGram
